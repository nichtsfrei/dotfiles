From 401fd5933810fc37519b4ec2572f18f1f23748ad Mon Sep 17 00:00:00 2001
From: Philipp Eder <philipp.eder@posteo.net>
Date: Sat, 26 Sep 2020 13:27:29 +0200
Subject: [PATCH] add vm_tile

vm_tile tiles the master section vertically instead of horizontally.
This enables a more convenient usage of the master area for ultra
wide monitor.
---
 config.def.h |  7 ++++---
 dwm.c        | 32 ++++++++++++++++++++++++++++++++
 2 files changed, 36 insertions(+), 3 deletions(-)

diff --git a/config.def.h b/config.def.h
index 1c0b587..c0f205c 100644
--- a/config.def.h
+++ b/config.def.h
@@ -32,13 +32,14 @@ static const Rule rules[] = {
 };
 
 /* layout(s) */
-static const float mfact     = 0.55; /* factor of master area size [0.05..0.95] */
-static const int nmaster     = 1;    /* number of clients in master area */
+static const float mfact     = 0.67; /* factor of master area size [0.05..0.95] */
+static const int nmaster     = 2;    /* number of clients in master area */
 static const int resizehints = 1;    /* 1 means respect size hints in tiled resizals */
 
 static const Layout layouts[] = {
 	/* symbol     arrange function */
-	{ "[]=",      tile },    /* first entry is default */
+	{ "[V]",      vm_tile }, /* first entry is default */
+	{ "[]=",      tile },
 	{ "><>",      NULL },    /* no layout function means floating behavior */
 	{ "[M]",      monocle },
 };
diff --git a/dwm.c b/dwm.c
index 664c527..007e0be 100644
--- a/dwm.c
+++ b/dwm.c
@@ -209,6 +209,7 @@ static void sigchld(int unused);
 static void spawn(const Arg *arg);
 static void tag(const Arg *arg);
 static void tagmon(const Arg *arg);
+static void vm_tile(Monitor *);
 static void tile(Monitor *);
 static void togglebar(const Arg *arg);
 static void togglefloating(const Arg *arg);
@@ -1671,6 +1672,37 @@ tagmon(const Arg *arg)
 	sendmon(selmon->sel, dirtomon(arg->i));
 }
 
+
+void
+vm_tile(Monitor *m)
+{
+	unsigned int i, n, h, w, mw, ty;
+	Client *c;
+
+	for (n = 0, c = nexttiled(m->clients); c; c = nexttiled(c->next), n++);
+	if (n == 0)
+		return;
+
+	if (n > m->nmaster)
+		mw = m->nmaster ? m->ww * m->mfact : 0;
+	else
+		mw = m->ww;
+	for (i = ty = 0, c = nexttiled(m->clients); c; c = nexttiled(c->next), i++)
+		if (i < m->nmaster) {
+            if (n <= m->nmaster)
+                w = m->ww / n;
+            else
+                w = m->ww * m->mfact / m->nmaster;
+			resize(c, m->wx + w * i, m->wy, w, m->wh, 0);
+		} else {
+			h = (m->wh - ty) / (n - i);
+			resize(c, m->wx + mw, m->wy + ty, m->ww - mw - (2*c->bw), h - (2*c->bw), 0);
+			if (ty + HEIGHT(c) < m->wh)
+				ty += HEIGHT(c);
+		}
+}
+
+
 void
 tile(Monitor *m)
 {
-- 
2.26.2

